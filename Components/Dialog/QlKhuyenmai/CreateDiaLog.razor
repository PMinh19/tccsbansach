@using BanSach.Components.IService
@using BanSach.Components.Services
@using BanSach.Components.Model
@inject IDialogService DialogService
@inject IItemManagement ItemManagement
@rendermode InteractiveServer
<MudDialog style="width:500px">
    <TitleContent>
        <MudText Typo="Typo.h5">
            Thêm khuyến mãi
        </MudText>
    </TitleContent>
    <DialogContent>
        <!-- Display product name as readonly if necessary -->
        <MudTextField Value="@ProductName" Label="Sản phẩm" Variant="Variant.Outlined" ReadOnly="true"></MudTextField>
        <MudTextField @bind-Value="discount.Rate" Label="Tỷ lệ giảm giá" Variant="Variant.Outlined"></MudTextField>
        <MudTextField @bind-Value="discount.StartDate" Label="Ngày bắt đầu" Variant="Variant.Outlined"></MudTextField>
        <MudTextField @bind-Value="discount.EndDate" Label="Ngày kết thúc" Variant="Variant.Outlined"></MudTextField>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Hủy</MudButton>
        <MudButton Color="Color.Error" OnClick="CreateDiscount">Tạo</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [Parameter]
    [CascadingParameter]
    public MudDialogInstance? MudDialog { get; set; }

    [Parameter]
    public Discount discount { get; set; } = new Discount();
    public List<Product> products = new List<Product>();

    // Method to handle cancel button click
    private void Cancel() => MudDialog!.Cancel();

    // Method to fetch product name based on ProductId
    private string GetProductName(int productId)
    {
        var product = products.FirstOrDefault(c => c.ProductId == productId);
        return product?.ProductName ?? "Chưa xác định";
    }

    private string ProductName => GetProductName(discount.ProductId);

    private async Task CreateDiscount()
    {
        if (discount != null && discount.Rate > 0)
        {
            MudDialog!.Close(DialogResult.Ok(discount));
        }
        else
        {
            MudDialog!.Close(DialogResult.Cancel());
        }
    }

    // Load products when the dialog is initialized
    protected override async Task OnInitializedAsync()
    {
        products = await ItemManagement.GetAllItem();  // Load products list
    }
}
